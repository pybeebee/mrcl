experiment  : INFO     MetaLearnerRegression(
  (net): Learner(
    linear:(in:11, out:300)
    relu:(True,)
    linear:(in:300, out:300)
    relu:(True,)
    linear:(in:300, out:300)
    relu:(True,)
    linear:(in:300, out:300)
    relu:(True,)
    linear:(in:300, out:300)
    relu:(True,)
    linear:(in:300, out:900)
    relu:(True,)
    rep
    linear:(in:900, out:300)
    relu:(True,)
    linear:(in:300, out:300)
    relu:(True,)
    linear:(in:300, out:30)
    
    (vars): ParameterList(
        (0): Parameter containing: [torch.FloatTensor of size 300x11]
        (1): Parameter containing: [torch.FloatTensor of size 300]
        (2): Parameter containing: [torch.FloatTensor of size 300x300]
        (3): Parameter containing: [torch.FloatTensor of size 300]
        (4): Parameter containing: [torch.FloatTensor of size 300x300]
        (5): Parameter containing: [torch.FloatTensor of size 300]
        (6): Parameter containing: [torch.FloatTensor of size 300x300]
        (7): Parameter containing: [torch.FloatTensor of size 300]
        (8): Parameter containing: [torch.FloatTensor of size 300x300]
        (9): Parameter containing: [torch.FloatTensor of size 300]
        (10): Parameter containing: [torch.FloatTensor of size 900x300]
        (11): Parameter containing: [torch.FloatTensor of size 900]
        (12): Parameter containing: [torch.FloatTensor of size 300x900]
        (13): Parameter containing: [torch.FloatTensor of size 300]
        (14): Parameter containing: [torch.FloatTensor of size 300x300]
        (15): Parameter containing: [torch.FloatTensor of size 300]
        (16): Parameter containing: [torch.FloatTensor of size 30x300]
        (17): Parameter containing: [torch.FloatTensor of size 30]
    )
    (vars_bn): ParameterList()
  )
)
experiment  : INFO     Total trainable tensors: 1005330
experiment  : INFO     Frozen layers = net.vars.0 net.vars.1 net.vars.2 net.vars.3 net.vars.4 net.vars.5 net.vars.6 net.vars.7
